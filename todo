#!/usr/bin/bash

function later_date {
    later="$1" # default return value if both are equal
    year_1=$(echo -n "$1"|cut -d'-' -f1)
    year_2=$(echo -n "$2"|cut -d'-' -f1)
    if [ "$year_1" -gt "$year_2" ]; then later="$1"; return; fi
    if [ "$year_2" -gt "$year_1" ]; then later="$2"; return; fi
    month_1=$(echo -n "$1"|cut -d'-' -f2)
    month_2=$(echo -n "$2"|cut -d'-' -f2)
    if [ "$month_1" -gt "$month_2" ]; then later="$1"; return; fi
    if [ "$month_2" -gt "$month_1" ]; then later="$2"; return; fi
    day_1=$(echo -n "$1"|cut -d'-' -f3)
    day_2=$(echo -n "$2"|cut -d'-' -f3)
    if [ "$day_1" -gt "$day_2" ]; then later="$1"; return; fi
    if [ "$day_2" -gt "$day_1" ]; then later="$2"; return; fi
}


# directory with list files
listdir="$1"
if [ -z "$listdir" ]; then
    listdir="$HOME/todo-lists"
fi

# version control
if [ -d "$listdir/.git" ]; then
    git -C "$listdir" add -A
    git -C "$listdir" commit --allow-empty-message -m ''
fi > /dev/null

# deadline
list="$listdir"/deadline
if [ -e "$list" ]; then
    today=$(date -I)
    cat "$list"|sort -g|while read line; do
        date=$(echo -n "$line"|cut -d' ' -f1)
        if [ "$date" = "$today" ]; then
            echo "DUE: $line"
        else
            later_date "$today" "$date"
            if [ "$later" = "$today" ]; then
                echo "OVERDUE: $line"
            else
                echo "$line"
            fi
        fi
    done | head -3
fi

# within a time window
list="$listdir"/timewindow
if [ -e "$list" ]; then
    echo
    (
        grep '^day\s' "$list"  |sed 's/^day/Within a day:\t/'
        grep '^week\s' "$list" |sed 's/^week/Within a week:\t/'
        grep '^month\s' "$list"|sed 's/^month/Within a month:\t/'
        grep '^year\s' "$list" |sed 's/^year/Within a year:\t/'
    ) | head -3
fi

# some day
list="$listdir"/someday
if [ -e "$list" ]; then
    echo
    echo "Some day:"
    shuf -n3 "$list"|sed 's/^/- /'
fi

# optional
list="$listdir"/optional
if [ -e "$list" ]; then
    echo
    echo "Optional:"
    shuf -n3 "$list"|sed 's/^/- /'
fi
